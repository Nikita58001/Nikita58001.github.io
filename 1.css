/* Свойство background-repeat определяет, как будет повторяться фоновое изображение.Можно установить повторение рисунка по горизонтали,
по вертикали,в обе стороны или чтобы он не повторялся вообще.Значение repeat-x будет повторять фоновое изображение только горизонтально
body {
   background-image: url("css_logo.png");
   background-repeat: repeat-x;
   } */
/* При установке свойства background-repeat на inherit,оно будет принимать такое же значение,как и свойство для родителя элемента
Например,мы установим фон элемента body,чтобы он повторялся только горизантально.Если мы установим значения свойства
background-repeat какого нибудь параграфа что бы оно наследовалось,то оно будет равно значение свойства элемента body.

body {
   background-image: url("css_logo.png");
   background-repeat: repeat-x;
   }
p {
   background-image: url("css_logo.png");
   background-repeat: inherit;
   margin-top: 100px;
   padding: 40px;
   }
 */
/* Css Свойства list позволяет нам устанавливать различные списки маркеров.В HTML существуют два типа списков: unordered lists
(неупорядоченные списки) (<ul>) - элементы списка обозначаются маркерами
ordered lists (упорядоченные списки) (<ol>) - элементы списка обозначаются числами,или буквами
В css , списки могут быть стилизованны дальше, а изображения могут использоваться в качестве элемнтов списка
Одним из способов является использование свойства list-style-type, которое может быть установленно на circle,square,decimal,disc,lower-alpha,и т.д

 */















h1.center {
    color: blue;
    font-size: 30px;
    text-shadow: 5px 2px 4px black;
}
h1.center {
    padding: 10px;
    border: 5px solid black;
}
h1.center {
    text-align: center;
}
p.center {
    color: blue;
    font-size: 30px;
    text-shadow: 5px 2px 4px black;
}
p.center {
    padding: 10px;
    border: 5px solid black;
}
p.center {
    text-align: center;
}
p.first {
    padding: 10px;
    border-style: solid;
    border-width: 2px;
}
p.second {
    padding: 10px;
    border-style: solid;
    border-width: 5px;
}
p.first {
    padding: 10px;
    border-style: solid;
    border-width: 2px;
    border-color: blue;
}
p.second {
    padding: 10px;
    border-style: solid;
    border-width: 2px;
    border-color: #ff6600;
}
p.third {
    padding: 10px;
    border-style: solid;
    border-width: 2px;
    border-color: rgb(0, 153, 0);
}
p.none {
    border-style: none;
}
p.double {
    border-style: double;
}
p.dotted {
    border-style: dotted;
}
p.dashed {
    border-style: dashed;
}
p.groove {
    border-style: groove;
}
p.ridge {
    border-style: ridge;
}
p.inset {
    border-style: inset;
}
p.outset {
    border-style: outset;
}
p.hidden {
    border-style: hidden;
}
div {
    border: 5px solid green;
    width: 90px;
    height: 90px;
}
div {
    border: 5px solid green;
    width: 100%;
    height: 90px; background-color: #ff6600;
}
p.first1 {
    border: 5px solid green;
    min-height: 100px;
}
p.second1 {
    border: 5px solid green;
    max-width: 100px;
}
body {
    background-color: black;
}
p {
    color: darkseagreen; text-shadow: 5px 2px 4px black; font-style: italic;
}
p.uro {
    padding: 30px;
    background-image: url("44.gif");
}